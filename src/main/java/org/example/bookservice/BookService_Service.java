package org.example.bookservice;

import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.13
 * 2017-10-18T16:25:44.610-04:00
 * Generated source version: 3.1.13
 * 
 */
@WebServiceClient(name = "BookService", 
                  wsdlLocation = "BookService.wsdl",
                  targetNamespace = "http://www.example.org/BookService/") 
@HandlerChain(file="/handler-chain.xml")
public class BookService_Service extends Service {

    public final static URL WSDL_LOCATION = BookService_Service.class.getResource("/BookService.wsdl");
    public final static QName SERVICE = new QName("http://www.example.org/BookService/", "BookService");
    public final static QName BookServiceSOAP = new QName("http://www.example.org/BookService/", "BookServiceSOAP");

    public BookService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BookService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BookService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public BookService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BookService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BookService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns BookService
     */
    @WebEndpoint(name = "BookServiceSOAP")
    public BookService getBookServiceSOAP() {
        return super.getPort(BookServiceSOAP, BookService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BookService
     */
    @WebEndpoint(name = "BookServiceSOAP")
    public BookService getBookServiceSOAP(WebServiceFeature... features) {
        return super.getPort(BookServiceSOAP, BookService.class, features);
    }
}